// Code generated by go-bindata.
// sources:
// static/index.html
// static/main.js
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\xdf\x6f\xdb\xb6\x13\x7f\xef\x5f\xc1\xaa\xf8\xbe\x55\xa2\xfd\x4d\xba\x15\x9d\x6c\xa0\x48\xdb\x61\xc0\xba\x15\x6d\x37\xac\x4f\xc3\x59\x3c\x45\x4c\x29\x52\x23\x4f\x89\x8d\xc0\xff\xfb\x40\xfd\xb0\x15\x59\xb2\x93\xd4\x68\xb2\xbc\x48\xa4\x8e\x77\xbc\x0f\x3f\x77\x3e\x5e\xe2\xa7\x6f\x7e\x3f\xfb\xfc\xe5\xc3\x5b\x96\x51\xae\xe6\x4f\xe2\xfa\xc1\x18\x63\x71\x86\x20\xea\xd7\x6a\x48\x92\x14\xce\x63\x5e\x3f\xb7\xf3\x39\x12\xb0\x24\x03\xeb\x90\x66\x41\x49\x69\xf8\x32\x60\xbc\x23\xa0\xa4\xfe\xca\x32\x8b\xe9\x2c\xc8\x88\x0a\xf7\x8a\xf3\x44\xe8\x0b\x17\x25\xca\x94\x22\x55\x60\x31\x4a\x4c\xce\xe1\x02\x96\x5c\xc9\x85\xe3\x8b\x52\xe5\xc0\x27\xd1\xff\xa3\x13\x9e\xb8\x66\x1c\xe5\x52\x47\x89\x73\x01\xb3\xa8\x66\x81\xa3\x95\x42\x97\x21\x52\x30\x8f\xb9\xb7\xf1\x4d\x26\x53\xa3\x29\x84\x2b\x74\x26\x47\x7e\x1a\xfd\x18\x4d\x2a\xcb\xdd\xe9\xbb\x6c\xc0\x25\x56\x16\xc4\x9c\x4d\x6e\xbd\x83\x8b\x7f\x4a\xb4\x2b\x7e\x12\x4d\xa3\x69\x33\xa8\x2c\x5e\x38\xaf\xbf\x56\xf8\x6d\x16\x32\xd0\x42\xe1\x02\xac\x8b\x2e\x1c\x3f\x8d\x26\xd1\x0f\xdd\xb9\xe3\x1a\x83\xa5\x34\x8e\x4f\xa2\xe9\x8b\xe8\xa4\x1e\x1c\xd9\xc0\x02\x41\xf3\x69\xe4\x2d\x54\xef\x47\x56\xff\xc7\xc7\x5f\x3c\x4a\xd3\x68\xfa\x32\x3a\xad\x46\xc7\xd5\xff\x4e\x2a\xfc\x04\x97\x68\x6b\x2b\x27\xd1\x49\x67\xea\xee\xa6\xa2\x42\x19\x8a\xd4\x8a\xfb\xa7\x5a\x85\x0a\x08\x1d\x8d\x28\x8a\x79\x1d\xdb\xf5\x60\x61\xc4\xaa\x79\xaf\xc6\x42\x5e\xb2\x44\x81\x73\xb3\x20\x43\x6b\x98\x74\xa1\x92\xe7\x19\x05\xdb\x5d\x0c\xc9\x85\x5e\x4f\x4f\xa6\x2f\x97\x18\x4d\x20\x35\x5a\xaf\x34\x55\xa5\x14\x03\x0b\xaa\x45\x4f\xc3\x90\x9d\x65\x60\x89\xbd\xb6\x08\x2c\x0c\x47\xe4\x3a\xca\x17\x66\x39\xa2\x6d\x23\x29\xc5\x2c\xf0\xa9\xaa\xef\xcb\x0d\x41\x2e\xe4\xe5\x88\xb5\xe1\x4f\x03\xd3\xbd\xa9\x66\x38\x88\xf1\x06\x93\xe0\xc9\x08\x02\x67\x46\x93\x35\xca\xed\xa0\x10\x6b\xd8\xa8\x51\x78\x89\xea\x00\xfc\x95\x4c\xa8\x30\x1d\xf3\x7f\x57\x58\x12\xe6\xfb\xc0\x2a\xba\x6e\x58\xa3\x58\x06\x2e\x04\x21\x8c\x76\x7b\x96\x55\x4b\xa5\x2e\x4a\xaa\x8e\xa4\x7a\x0b\x53\xa9\x08\x6d\xc0\xaa\x1f\x98\x59\xf0\xae\x1a\xb2\xc5\x8a\xe5\x48\x56\x26\x4c\x43\x8e\xcf\x19\x24\x09\x16\xe4\x98\xc5\xf3\x52\x81\x65\xb8\x2c\x2c\x3a\x27\xbd\xc1\xbd\xf6\x9a\xbf\x66\xbb\x95\xc9\x80\xd1\xaa\xc0\x59\x40\xb8\xa4\x80\x15\x0a\x12\xcc\x8c\x12\x68\x37\xd6\x6b\xd3\x2e\x8a\xa2\x43\xde\xc0\x86\x86\x25\x91\xd1\x41\xe5\xd8\x82\x74\x98\x28\x04\xdb\x3a\xb7\x5f\x49\xa5\xc8\x15\xa0\x37\xbb\x4c\x8c\xf6\xa1\xe2\x72\x50\x43\x87\x3b\x8c\x6b\xbb\x3a\x05\x96\x42\x98\x28\xe3\xd0\x67\x00\x79\x0b\xe3\xdc\x5b\x3f\xe0\x29\x87\x7d\xc1\x53\xdc\x29\x74\xd8\xbd\x48\x57\x41\xe4\xf1\xad\x51\x45\x11\x26\xa6\xd4\x14\xcc\xff\x6a\x1c\x60\x26\xed\x48\x35\x87\xd8\x0a\x7d\xd9\xe7\xe5\xed\x43\x7c\x78\xeb\xb6\xc9\x94\x87\xb2\x9a\x27\x1e\xab\xa9\xb2\x1b\xd7\xf7\x47\xe6\x1b\xc2\xb1\x47\xe0\xaa\xa4\xa3\xb0\x19\x48\x17\x42\x42\xf2\x12\xb7\xbc\x56\x52\x63\x78\x28\x99\x6e\xb4\x1f\x9b\xd5\x5d\xeb\xdf\x87\xda\xec\x10\x48\x5b\x68\xc0\x22\x3c\x1c\x34\x5d\xeb\x8f\x0e\x9a\x05\xd8\x87\x43\xa6\x63\xfc\x71\xa4\xc3\xf1\x2c\xf1\x89\xc0\x12\x77\x64\x0a\x06\x5a\x30\x8b\xa9\x45\x97\xb1\x02\xad\x34\xe2\x51\x26\x8c\xed\x19\x17\x50\xfa\x5f\x9c\xef\x7f\xbe\x8d\xe1\xef\x48\xfa\x7e\x0d\x53\x9f\xcf\xa6\x86\xf9\x78\xe3\xd8\x9e\x33\xa9\x99\xc3\xc4\x68\x71\xff\x5a\x45\x97\xf9\xc2\x57\x49\xb9\xd4\xb3\x60\x1a\xb0\x4b\x50\x25\xce\x82\x17\x7b\x2b\xda\xfb\xb2\xf0\xbd\x74\x09\xf3\x89\xff\x11\xfd\x4a\xb5\x2c\xc3\x65\x61\x2c\x85\x85\x3e\x0f\x7a\x44\x7c\x00\xe6\x09\x73\xa5\x95\x01\x71\x44\xf2\x6d\xf6\x39\xff\xf0\xdb\xcf\xc7\x4a\xd1\x2d\x78\xa6\x40\x1d\x5a\xb8\xea\x43\xd7\x34\x4d\xb8\xc0\x45\x79\xce\x9b\xc2\x29\x60\x04\xf6\x1c\x69\x16\xfc\xbd\x50\xa0\xbf\x3e\x48\x15\x6b\xc4\x31\x23\x7b\xb3\xc7\xf9\x47\xb8\xfa\x8f\x54\xbd\x47\x89\x9a\xfa\x36\x22\x80\x60\x27\x6a\xce\xfc\x27\xf6\x06\x08\xee\xc2\xa4\x4a\x61\x4f\x97\x3f\x6c\x01\xfa\xbc\xbe\xe7\x9b\x92\x7c\xb5\x26\x5a\x0b\xaf\x95\x3a\x2a\x9a\x83\xd7\x6f\x0d\x97\xf3\x3a\x87\xbd\xd5\x62\xe8\x1e\xbd\x7b\xd9\x7e\x5f\xb3\x9d\xfd\x2a\x1d\xed\x5e\xb5\xdb\xf6\x41\x1b\x13\x87\x1a\x1d\xaa\xcc\x47\xcf\x65\x57\xf2\x50\xe3\xe2\x56\x2d\x8e\x81\x7d\x86\x04\x0b\x55\x05\xce\x28\x11\x47\x20\x3c\xf0\x69\xb4\xe7\xb1\x05\x7d\x07\xcf\x7e\x3b\x64\x33\xec\xf6\xb4\x72\xd8\xd3\xfb\xa2\x55\xb7\xf5\xcc\x9e\x55\xc5\x1c\xbb\xbe\xb9\xbb\x2b\x29\x28\x7b\xc5\xa6\x93\xc9\xff\x7e\xba\xf9\x25\x43\x7f\x3b\x7b\xc5\x5e\x4c\x26\xc5\xb2\xf3\x6d\xbd\x7d\x25\x1b\x35\xc8\x59\x73\x15\xf9\xa4\x85\x0a\x13\x42\xc1\x48\xf4\x0d\x55\xcd\xe1\xab\x46\xe7\xc2\x28\x31\xac\xf2\x59\xb7\x34\x18\xd9\xec\x29\xe6\x83\x8b\x63\xde\xf1\x39\xe6\x9d\x56\x5d\x05\xf3\x67\xcc\x8b\xaa\xd3\xb7\xe1\x6b\x8b\x65\x9f\x02\x21\x35\xa2\xdd\x9e\x07\x5f\x86\xdb\xfe\xef\x56\xa2\xdb\xf4\xf7\x6b\x5b\xf6\xd5\x03\x8f\x09\x59\x59\x60\xbf\x77\x17\xd3\xcd\xff\x18\x6c\xe7\xed\x08\xb5\x28\x9b\xd7\x24\x89\x39\x65\xe3\x32\x67\xa5\xb5\xa8\x89\xfd\xe9\x4b\x9d\x61\xd1\x98\xf7\x8d\x78\xb9\x9d\xed\xc4\x54\x23\xd8\x5f\x7e\x7d\xfd\x0c\x21\xc9\x98\xcf\x8b\xeb\xf5\x90\x07\x2d\x06\x5b\x72\xf8\x45\x32\x65\x2d\x3f\xd6\xeb\x0e\x59\xae\xaf\xb9\x4c\xd7\xeb\xb1\xf0\x27\xd1\xaa\xd3\x90\x63\x30\xbf\xbe\xf6\xcf\xf5\x3a\xe6\x34\x80\x5f\x6f\x49\x55\xf0\xf9\x35\xd5\xcb\xd8\xa2\x5d\x40\x6a\x3f\xb9\xf7\xb3\xe7\x62\xcc\x07\x60\x89\x29\x35\x86\x1e\xd1\x69\xde\xdc\x4e\xcc\x2b\x36\xb6\x81\xd1\xa6\x8a\x27\x31\xaf\xff\x83\xf5\x6f\x00\x00\x00\xff\xff\xdf\x71\xbc\xa3\xd9\x1a\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 6873, mode: os.FileMode(420), modTime: time.Unix(1481183708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticMainJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x59\x6d\x6f\x1b\xb7\x93\x7f\x5d\x7d\x8a\x29\x1a\x64\x77\x1d\x69\xe5\x00\x77\x87\x83\x5c\x05\x48\xd2\x14\x2d\xd0\xa2\xbd\x24\x7d\x65\x18\x2e\xb5\x3b\x92\x68\xaf\xc8\x0d\xc9\xb5\xac\x26\xfa\xee\x07\x3e\x2e\x29\xad\xec\xe4\x0f\x37\x40\x53\x85\x1c\xce\xfc\xe6\x89\x33\xc3\x9d\x9e\x9d\x8d\xe0\x0c\xde\x10\x89\x50\x35\x44\x4a\x58\x72\x01\x7c\x71\x83\x95\x92\xb0\x5d\xd3\x6a\x0d\x44\x20\xe0\x1d\x32\x05\x92\x77\xa2\x42\x59\x8e\xe0\x6c\x3a\xb2\xe4\x7f\x2c\x24\x8a\x3b\xb2\x68\x10\x3e\x8f\x00\x38\xcb\x0d\xe9\x18\xd6\x84\xd5\x0d\x8a\xc2\x2c\x03\x2c\x90\xb0\x92\xb3\x5c\xad\xa9\x1c\xc3\x01\xcd\x08\x60\x3f\x1a\x01\x2c\xa9\x40\x7f\xbe\x2c\xcb\x9a\x28\x92\x9c\x37\xfb\x09\x07\x4f\x65\x38\xec\x47\x23\xa7\xcf\xef\xa8\x04\xad\x3e\xa0\x02\x64\x15\x69\x65\xd7\x10\x85\x12\xd4\x1a\x41\xa2\x02\xbe\x04\x89\x0d\x56\x0a\x6b\xd8\x18\x52\x09\x8a\xc3\x02\x61\x25\x48\xbb\xc6\x5a\xf3\x20\xac\x36\x07\x2a\xde\x38\x52\x2d\xc9\xd8\x47\xad\x89\xb2\xa4\xb1\x29\x22\xa1\xf7\x0a\x59\x7d\x64\x9c\xe9\xd9\x19\xb4\x44\x68\x4b\x52\x09\xc4\x1d\x90\x40\x99\x54\x84\x55\xe8\xec\xad\x15\x8c\x98\x19\x52\xd9\x2d\x1c\xf0\xb3\xe9\x08\xa0\xe2\x4c\x2a\xd1\x55\x8a\x8b\xdc\x72\xf4\x76\x92\x5d\x8b\x22\x2f\xcc\x6f\xcd\xa8\x74\x02\xe7\x4e\x72\xbf\xe1\x15\x9f\x03\xc3\x2d\x7c\x40\x15\x9f\x32\xaa\xce\xe1\xb3\x71\x4b\xc2\x49\x3b\x31\xeb\xda\x9a\x28\xcc\xc6\x90\x17\x30\x7f\xe5\x44\x03\x4c\xa7\xf0\x96\xb4\xaa\x13\x68\x6c\xd5\x72\xca\x94\x8d\x28\xc2\x76\x47\x26\x77\x87\xf4\x76\xde\xa0\x02\x46\x36\xa8\x35\x8c\xd1\x15\x81\xb7\x03\x21\x15\x17\x78\x6d\x38\xe7\xfa\x40\xe1\xb6\x1d\x50\x47\x65\x02\xa5\x47\xa9\xd7\x2c\xe1\xbe\x88\x14\x1a\xd2\x24\x51\x55\x20\xab\xb5\x35\x61\x0f\x21\x46\x49\x5d\xe7\x16\x9c\xc7\x46\x97\x90\x7f\x6f\x8e\xad\x89\xf4\x7b\x3d\xf0\x58\x9d\x32\x3a\x3d\x3a\xa1\xd5\xc0\xb6\x55\x87\xd4\x75\x36\x86\x93\xdb\x4e\x13\xa7\xa7\x87\x2b\x70\xc3\xef\x70\x00\xf1\x57\x02\xae\xb1\x41\x85\x07\xa0\xec\x62\x1f\x29\x97\x76\xfb\xea\x18\x94\x15\xff\xed\xb0\x15\x5f\xad\x9a\xff\x00\x76\xaa\xae\xe5\x09\xd8\x48\x4c\xc9\x0e\xdd\x10\xe4\x56\x0d\x12\xed\xf0\xcf\x47\x79\x52\xba\xad\xa1\x1c\x39\x50\xc9\x50\x66\xc5\xe1\x72\xa4\x69\x2f\xeb\x5a\x73\x09\x02\x43\x2e\x58\xa1\xa7\xb3\xe1\xc8\xf4\x30\x87\xcb\xab\xa0\xcb\x83\x72\x23\xeb\x39\x7e\x02\x55\x27\x58\xaa\x6e\x44\xe5\x0f\x0e\x44\xa9\x63\xa0\x21\xbb\x6c\x9f\x0f\x60\xfb\xf2\xc5\x83\xb3\x44\x65\xdb\xc9\x75\x1e\x74\xa1\x1b\x94\x8a\x6c\xda\x59\x92\x7c\x61\x79\xec\xe8\xee\x48\xd3\x61\x4a\xe3\xc0\x26\xf1\xb7\x3f\x70\x51\x64\x21\x2b\xdd\xab\xd3\x36\x5c\x35\xbb\xd4\x01\xce\x12\x7f\x98\x02\x58\xde\xe2\x4e\xe6\x81\x51\x51\x6e\x48\x6b\x2e\x9d\xf8\xce\xd3\xaa\x0b\xb2\x4d\xf4\xd6\x34\x3e\x19\x1c\xc7\xfe\x1a\xbb\x9f\x69\x7a\xc3\xcb\xe0\xd1\xcc\xcc\x8f\x5e\xe3\x62\x1c\xa8\x77\x27\xa9\x8d\x39\x22\x4a\xb5\x6b\x71\x06\x99\xac\x88\x52\x28\xb2\x7e\x43\xa3\x99\x99\xbf\xc3\x5d\x19\xec\x64\x8a\xe6\xb2\x63\x95\xa2\x9c\x41\x2b\x78\x85\x52\x5e\x3b\xb3\x5e\x0b\x94\x2d\x67\x12\x73\x21\x5b\x6b\xa1\x3e\x36\x25\xc0\x1c\x36\x1d\x5b\xa1\x27\xd7\x54\x46\xff\x10\xae\xe1\xc0\x46\x2a\x62\x62\xc3\x1f\xb0\x0b\xf1\x09\xbb\xa2\x8f\x38\xe3\x13\x29\xe9\x8a\xb9\x40\x93\x63\x88\x49\x9c\x51\x7d\x21\xb1\x85\x1f\xfe\xb4\xf0\x4d\xd5\xde\x84\xda\xaa\x38\x10\x58\x36\x44\xc1\x2d\xee\xa6\xc6\x6a\xae\xc1\x19\xeb\x3a\x7a\x87\x42\x51\xb6\xd2\x15\x3f\xb4\x02\xba\xbc\xeb\xae\xa7\xe5\x52\xd2\x45\xb3\x03\xca\xc0\xd6\xdb\x4e\x60\xad\xb3\x74\x53\xea\x42\x1c\x0c\x97\xda\x21\xc9\x56\x13\x1f\x28\xbb\x46\xf9\xbb\xe2\xa8\xe0\xc5\xd1\xe6\xcf\xc6\x99\x65\x31\xcf\x3d\xbe\x28\xbc\xcc\x8d\xb8\x6b\x91\x2f\x73\x1b\x0e\x30\x9f\x43\xc6\xba\xcd\x02\x45\xd6\xdf\x16\x56\xbe\x3d\x07\x73\xcb\x2f\xbe\x1b\x87\xd9\x58\x23\x45\x6c\x02\xf0\x5b\xdc\x1d\xe2\xb6\xe7\xe2\x72\xed\x84\xfe\xfd\xec\xb3\x96\xbb\x2f\x9f\x7d\xbe\xc5\xdd\xfe\xef\x00\xe0\xf2\x16\x77\x57\x69\x44\x8e\xec\x7f\xce\xbb\x96\xc1\x90\x73\x57\x1c\x44\xc7\x74\xba\x80\x0d\xac\x07\xbd\xac\x5d\xdb\x0a\x5c\xd2\x7b\xca\x56\xfa\xfc\x06\xb6\x54\xad\x61\xc5\x43\xd8\x0d\x7b\xd3\x05\x69\x08\xbc\xc7\xfc\xa9\xa9\x8e\xfd\xe9\x0e\x0f\x3b\xd4\x6e\x5e\xea\xbf\xbf\xc9\xa3\x21\x7c\xe6\x90\xc5\x7a\x64\xf0\xc2\xc0\x78\xd4\xf1\x0f\x98\xba\x6f\xa0\xe5\xc9\xf6\x99\x34\x4d\x48\x17\xd7\x28\x53\x01\x1b\x2e\xb5\x71\x2a\xd3\x67\x9e\x59\x71\x72\x0c\x4b\x54\xd5\x5a\xe7\x8d\xe0\x1b\xc3\x64\x5a\xe3\xa2\x5b\x4d\x37\x41\x48\x6d\xaf\xb4\xa3\x66\x5a\x9e\x6a\xa5\xe3\x06\xf8\x64\xeb\xdb\x77\xb8\x71\x8d\xd6\xc6\x90\x7d\xb9\x34\x6b\xe1\xe6\xd5\xdd\x70\xd7\x34\x51\xd3\x8b\x82\xf2\x1a\xe6\xf0\xdf\xe7\xe7\xe7\x71\x65\x6d\x14\x8a\x9e\xda\x14\x14\xa3\xef\xe3\xa5\x35\xaa\x56\xe6\x98\xad\xcf\x87\x25\x88\xdc\x53\x2e\xcb\x15\xaa\x3c\x4b\xcd\x95\xf9\x26\xaa\x54\x6b\x64\xfa\x0a\x8d\xcb\x11\xc0\x4f\xfa\x3e\xe5\xad\x8e\x64\x59\xba\x1a\xd7\x90\x1d\xef\x74\x81\x51\x8d\x0e\x99\x70\xed\x56\x9b\xba\xa1\x0c\xcb\x1b\x4e\x59\x9e\x41\x60\xdd\x07\x86\x6c\x7d\x8a\xa6\x62\x4f\x95\x8a\x94\x2a\x78\xe0\xd5\x61\x1f\xdf\xfb\x26\x9d\x06\x0e\x9c\x34\x74\x35\xa6\x94\x89\xeb\x70\xab\xd5\xc7\xbc\xa7\x81\xbe\x33\xb4\xbd\x7c\x7a\xfa\xe4\xa0\x10\xea\xa3\xe9\x7b\x88\x50\x7d\x98\x29\xde\xc6\x51\x46\x99\xd2\x91\xd9\xc0\x1c\xb6\x94\xd5\x7c\x5b\x4a\x54\xbf\xba\xc5\xdc\x8e\x15\x86\xd0\xfb\x79\x1c\x47\x56\xdc\x5c\xb5\xf9\x51\xa7\xeb\x99\xf7\x99\xef\x64\x98\xe6\x31\x48\x49\x69\xe3\x1e\x31\x42\x17\x02\x3b\x74\xbb\x12\xd5\xb5\x85\x91\x3b\x34\x71\xe3\x1b\x42\xdf\xfe\x38\x00\x26\xaf\x45\xc7\x18\x65\xab\xfc\xb0\x07\x8f\x0c\x14\x56\x8c\x01\x53\xe1\x31\x87\x34\xf4\xdf\x70\xde\x20\x61\xc7\x5a\x79\xd0\x3f\x9b\xec\xcb\x6d\x12\x26\x98\x43\x5e\xda\x1f\xa3\x61\xf7\x6b\xbd\x3b\xd1\xe4\x45\x3f\x25\xb9\x41\xaf\xbf\xa3\x05\xba\x80\x7a\x8f\xab\x77\xf7\x6d\x1e\xb3\xff\xf2\x05\xb2\xf2\xcc\x65\x4b\xdc\x12\xcd\xa3\xe8\x1d\xec\x16\x07\xfa\xc1\xb8\x41\x1b\x47\xab\x71\xbb\x6b\x6f\x16\x33\xef\xc6\x24\x7e\xa2\x9e\xd9\xa4\xf7\xff\x34\xbd\x7b\x3c\x1c\xfb\x02\xab\x83\xda\xe9\xe0\xb2\x49\x63\x13\x58\xe2\x3d\x56\x6e\xc5\x80\x2f\xdc\x98\xfc\x2c\xcf\x7e\x70\xba\x4d\x2a\xde\x31\x95\x15\xa5\xc2\x7b\x95\x47\x6a\x36\xc8\x56\x6a\x5d\x04\x7a\xcb\x1f\xeb\xf4\x80\x1f\x2b\x3c\xf5\x01\xfb\x89\xd2\x57\x7b\x56\x94\x6b\xb5\x69\x72\x85\x9b\xd6\x94\x1c\x77\x4d\x5c\x9b\xdd\x6b\xbf\x1c\x26\x07\x7d\x87\xcd\x92\x0b\x64\xef\x91\x6b\xaf\x50\xd6\x76\xba\x4a\x6b\x31\xe6\xf7\xc4\x62\x73\x8e\xd3\xb1\x6c\x96\xb5\x79\xf3\x02\xbe\x9f\xc7\x31\xd4\x07\x75\x4f\x13\x6f\x47\xc1\x6c\xca\x26\x4c\x9e\xe4\x8f\x66\xfb\x67\xc3\x95\xed\x49\xe1\x89\xb8\xea\xba\xda\xf7\x37\xd7\xba\x2a\xe4\xfd\xeb\x9a\x0b\xc9\x3f\x4d\xad\x28\x19\x6e\xf5\xaf\x3c\xab\xd6\x44\xa8\x6c\x6c\xac\x3c\x7e\xa0\xac\x0c\xee\x15\xe9\x60\xd1\x70\x75\xad\x2b\xcd\xb5\x61\x9a\x27\x72\x2d\x9c\x34\x82\x93\xd9\x6c\x80\x17\x11\x48\x12\x5e\xae\xff\xaa\x6e\xb1\x7e\x2d\x50\xcf\xe5\xfe\x40\xae\x04\xa9\x50\x26\x57\xab\x59\x81\xe7\xcf\xc1\xfe\xf2\x51\xd9\xdf\x63\x66\xf9\xf2\xfc\x4a\x7b\x5b\xdf\x9d\x99\xe2\xff\xa0\xe0\xbb\x2c\x21\x28\x97\x5c\xbc\x23\xd5\x3a\x97\x28\x28\xda\x32\x67\x7f\x96\xbb\x52\xe0\x1d\x0a\x89\x79\x71\x01\x6e\xed\xbe\x5f\xd3\xd5\xe5\x3b\xd3\x3a\xe6\x77\x44\x00\x9d\xbf\xbc\x00\xfa\x63\x82\xe6\x02\xe8\x8b\x17\xc9\xfb\x97\x05\x45\x63\x50\x0c\xef\xd5\x2e\xd3\xac\x7a\x66\x37\xf3\xf3\x0b\xb8\xf9\x31\xff\x9d\xa8\x75\xb9\xa1\xde\x00\x97\xf4\xea\x32\xdb\x65\x57\x8e\xfd\x38\xf0\x9b\xbc\x4c\x36\x8a\xe2\x02\x6e\xac\xe4\xef\xbe\x8b\xa4\x1a\x9a\xcb\x9b\x2b\x78\x31\x3f\x3a\x7a\x79\x73\x75\x61\x41\xec\xf5\xff\xf6\x4f\x68\x25\xc7\xd4\xf7\x51\x86\xe3\x45\xda\xbd\xda\x00\x8a\xbc\xff\x60\x30\x0d\x44\xd3\x82\x88\xa3\x60\x72\xaf\x3b\x0f\x70\x4a\x5a\x7f\xab\x1a\x5f\x42\xfc\x68\xed\x34\xd2\xfd\xbc\x76\xd7\x82\x88\x6c\x08\xb9\x7d\xc1\xde\x8f\x46\xda\x7b\x06\xd0\x92\xe9\xb2\x9b\x26\xcd\x01\xe8\x34\x87\xdc\xa9\xbc\x78\xf2\xcb\xe8\xaf\xf7\xbf\xc1\x2f\x84\xe9\x3e\xf1\x5f\xbb\x90\x42\x3d\x0e\xd6\xef\x5c\xf1\xfd\xeb\xfd\xaf\xc6\xd0\x9d\x7b\xd9\xfb\xbf\x0e\xc5\x2e\xcf\xec\x95\x9f\x0d\xec\x44\x37\xbc\xce\xf4\xd4\x7d\xbe\x08\x49\xfa\x0f\xc2\x2b\x38\xf7\x7e\xea\x4a\x52\xd7\x29\xeb\x31\xbc\x16\x82\xec\x4a\x3d\xb3\x9c\xe0\x62\xc7\x1b\x13\x51\xd6\xa9\x41\xa0\xa7\x48\x2b\x49\x2c\xc5\xc1\x74\x57\xe7\x01\xbd\x63\xb7\xa6\x52\x71\xb1\x33\x8f\x65\x1f\x94\xa9\x7b\xfb\x31\x64\xd9\x18\xba\x52\xf1\x0f\x4a\xd8\xe6\x2b\x0d\x67\x22\x24\x1e\xd8\xf2\x53\x6c\xcb\xf2\x93\x01\xa0\x44\x87\xde\x46\x9f\xca\x81\x67\x56\x3b\x82\xf6\x5b\x7a\x0a\x95\x46\x64\x34\x85\xa6\x76\x21\x75\xdd\x1f\x18\x7a\x7a\x1d\x78\xdd\x3c\x94\x3d\xcc\x35\x7d\x3c\x4e\x1f\x0b\xac\x06\xa9\xa5\x13\xa3\xf6\xfd\xe2\xa7\xc4\xc0\x4f\x9d\x28\x1f\x50\x75\x2d\x3c\x87\x77\xe6\x53\xd9\x2f\xf6\xd3\x96\xfc\xb7\x52\x86\x32\xea\xaf\x80\xd0\x2d\xe9\x41\xd7\xe8\x3f\xd8\x35\xcd\x1c\xa6\x05\x11\xb2\xac\xf8\xa6\xa5\x0d\xe6\x87\x1d\xd8\xc4\x53\xfb\x56\x2c\x04\xf7\x4f\xee\xb5\xdb\x08\x70\xb5\x7e\x16\xbc\x66\x2f\xc6\x59\xe4\x45\xb9\xe6\xdb\xdf\x28\xbb\x9d\xc1\x92\x34\x32\xea\x6c\x37\xbc\xc6\x37\x44\xbc\xe9\x94\xe2\x4c\x7e\xe4\xef\x4d\xfa\xce\xe0\x32\x53\xfc\xd7\x0d\x59\xe9\x39\x2c\x93\xc8\x6a\x2d\xf1\x23\x7f\xdb\xf0\xae\xce\xae\xfa\xf3\x35\x95\x6d\x43\x76\x0d\x5f\x71\xc7\xdb\xc7\xc5\x38\x01\xe3\xba\x93\x1e\x93\x8b\x9b\x71\x64\x22\x39\x33\x99\xe1\x1e\x1b\xf2\x58\xd7\x10\x81\x2e\x7b\xc2\x07\xb9\x24\xc5\x8b\x43\xea\xf4\xa3\x92\x46\xf2\x08\x89\xbb\xfb\x02\x55\x08\xdb\x30\x33\x25\xcb\x7e\x88\x1c\x41\x9c\xeb\x3a\x98\x9f\xe5\x35\xaf\xba\x0d\x32\x55\x94\x02\x49\xbd\xcb\xfb\x8f\x73\x36\x5a\x74\x67\x3c\x9d\xc2\x47\xf3\x6d\xc5\x27\xa1\x45\xa5\x43\x6a\xbb\x46\x06\x55\x43\xab\x5b\xca\x56\xc0\x99\x7d\x2a\xa3\x2c\x7e\x4f\xb5\x1c\x4c\xa8\x8c\x74\xff\xde\x8b\xd4\x4a\x99\xc3\xda\x7d\x4a\x38\xc0\x13\xc1\xb7\xa0\x6a\x33\x2a\x64\x63\xc8\x31\xfa\x5e\x98\x1a\xc5\x7d\xf1\xc1\x52\x11\xb1\x42\x65\xa6\x86\xb7\x9c\x29\xcd\x7c\xe4\x3f\xdc\x4d\xa7\x3a\xcd\x92\x07\xde\x86\x4a\xd5\x4f\x7b\x87\x88\x4c\xef\xae\x11\xa5\x03\xc0\x10\x92\xe3\xfb\x02\xcb\xaa\x13\x02\x99\xfa\x68\x21\xd9\x07\xb9\x21\x30\x02\x97\x02\xe5\xba\x9f\x94\x1f\xc3\x61\x09\x1f\xc3\xe1\x87\xf3\x41\x20\x70\x06\x2f\xcf\xcf\xcf\x13\x3c\x6f\x1b\xd4\x0d\x60\x27\x2d\x2c\xd3\x37\xb8\xfe\xbd\x41\x72\xe7\xde\x3f\x8f\x5d\x4f\x99\x22\x95\x7a\xc8\xa3\x3f\x2c\x14\x9b\x98\x47\x87\x89\xe6\xf7\xb0\x2f\xe3\x2f\x5b\xc7\xf0\x7a\x64\x84\xd5\x47\x58\xbe\x0e\xc4\x57\xc8\x4f\x45\xbb\xa0\x37\x5d\x9d\xfb\xa2\xff\x35\xc2\x5a\xd2\xc9\xa3\xc0\x35\xb3\x65\xc5\x99\x1b\x2d\x03\x1d\xd0\x68\xb2\x4c\x7c\x39\xfc\x5a\x72\x90\xef\xd1\xab\x89\xe6\xee\xfa\x9a\xb7\x0d\x91\x32\xcf\x96\xc4\x61\x49\x48\x48\x5d\x47\xfb\x0d\xd9\x65\x83\x85\xf7\xc4\xc5\x72\x5a\x52\xcf\x69\x50\x50\x04\x64\x7f\xec\xdf\x9f\x4f\x25\xe3\x50\x30\x0d\x27\xe4\xf1\xc4\x6e\xe6\xef\xcc\x09\x3d\x91\xaf\xac\x6b\x9a\xc4\xe9\xef\xee\x5b\xae\xc3\xcc\x3c\x89\xd3\x0a\xa8\x2e\x2f\x8f\x02\x43\x73\x6a\xd2\xb2\xd5\x21\x2c\xdb\x77\x27\x2f\x9c\xab\x1a\xe6\xaf\x92\xd7\x46\x37\x46\xbb\x62\x96\xaf\xea\x71\xf2\xd8\xe3\x1a\xa1\x0d\x51\xb3\xcc\x88\x38\xd8\x5b\x23\x5d\xad\xd5\x0c\xfe\xe7\xfc\xfc\x70\x6b\x4b\x6b\xb5\x9e\xc1\xcb\xff\x72\x2f\xd1\xfe\xcf\xbe\x48\x31\x99\x81\xc2\x14\x95\xf4\xe9\x29\x1a\x6b\xdc\x2b\x22\x51\x7c\x11\xa8\x4b\xd9\x36\x54\xe5\xd9\x38\x2b\x2e\x5f\x5e\x15\xc9\xb1\x45\xb7\x04\x57\x08\x4d\x5f\xfc\xa6\x5b\x2e\x51\x98\xa3\xc9\x03\x90\xa7\xbf\xa3\xb8\xf5\x6d\x27\x65\xea\x7f\xcd\xa1\x7c\xd1\x2d\x7b\x32\xd3\x0d\xda\x5c\x82\x39\x9c\x5f\x00\x85\x1f\x21\x62\x68\xe6\x5f\x28\x12\xe3\x69\xb6\x97\xf4\x0a\xe6\x96\x50\xdf\x22\x6f\x79\x8d\xaf\x55\x4e\x0b\x78\x0e\xe7\xf7\xcb\xe5\xd1\x93\x97\x53\xa0\xe1\x0b\x07\xe8\x4d\xc3\x17\xf9\xa5\x66\x75\x35\x86\xcf\xe6\xb3\x69\x66\x22\x63\xaa\xfd\xb1\xef\x11\xfa\xe7\x5c\x72\x87\xaf\x65\xae\x39\x8c\x21\x5b\xf1\x89\x8f\x3c\x4d\x9e\xbe\x16\x87\xba\xb0\xa5\xaa\x5a\x83\xe2\xa0\xe7\x37\x7b\xdb\x3d\x1a\x77\x9a\x74\xe2\x1f\x5d\x0e\xd3\xc1\xe8\xaa\x26\x0b\xd3\x35\x65\x45\x9a\xb2\x54\x4e\x48\xa5\xe8\x9d\x4f\x4a\x7f\x2b\x45\x1c\x8b\x28\x85\x0f\xc9\x4f\x8f\x9c\x49\xd0\x0f\x68\x47\x04\x92\xaf\xd4\x4e\x93\x3e\xad\x76\x11\xc7\x6f\xd0\xae\x7f\x39\x7a\x54\xbb\x05\x11\x5f\xa9\xdc\x82\x88\xa7\xd5\xad\x67\xf8\x0d\xaa\x85\x67\x8c\x13\x9a\xbd\xc7\x5a\x90\xad\xa9\xbf\x7a\x53\xb7\x78\x36\xc4\x41\xa0\x1e\x89\x8d\x9a\x76\x45\xc3\xd4\x4b\xb9\xed\x60\xf7\xc5\xe8\xff\x03\x00\x00\xff\xff\x89\x13\xd2\xb1\x2a\x28\x00\x00")

func staticMainJsBytes() ([]byte, error) {
	return bindataRead(
		_staticMainJs,
		"static/main.js",
	)
}

func staticMainJs() (*asset, error) {
	bytes, err := staticMainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/main.js", size: 10282, mode: os.FileMode(420), modTime: time.Unix(1481185486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/index.html": staticIndexHtml,
	"static/main.js": staticMainJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{staticIndexHtml, map[string]*bintree{}},
		"main.js": &bintree{staticMainJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

