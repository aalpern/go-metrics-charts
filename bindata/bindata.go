// Code generated by go-bindata.
// sources:
// static/index.html
// static/main.js
// DO NOT EDIT!

package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _staticIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x59\xdf\x6f\xdb\xb6\x13\x7f\xef\x5f\xc1\xaa\xf8\xbe\x55\xa2\xfd\x4d\xba\x15\x9d\x6c\xa0\x48\xdb\x61\xc0\xba\x15\x6d\x37\xac\x4f\xc3\x59\x3c\x45\x4c\x29\x52\x23\x4f\x89\x8d\xc0\xff\xfb\x40\xfd\xb0\x15\x59\xb2\x93\xd4\x68\xb2\xbc\x48\xa4\x8e\x77\xbc\x0f\x3f\x77\x3e\x5e\xe2\xa7\x6f\x7e\x3f\xfb\xfc\xe5\xc3\x5b\x96\x51\xae\xe6\x4f\xe2\xfa\xc1\x18\x63\x71\x86\x20\xea\xd7\x6a\x48\x92\x14\xce\x63\x5e\x3f\xb7\xf3\x39\x12\xb0\x24\x03\xeb\x90\x66\x41\x49\x69\xf8\x32\x60\xbc\x23\xa0\xa4\xfe\xca\x32\x8b\xe9\x2c\xc8\x88\x0a\xf7\x8a\xf3\x44\xe8\x0b\x17\x25\xca\x94\x22\x55\x60\x31\x4a\x4c\xce\xe1\x02\x96\x5c\xc9\x85\xe3\x8b\x52\xe5\xc0\x27\xd1\xff\xa3\x13\x9e\xb8\x66\x1c\xe5\x52\x47\x89\x73\x01\xb3\xa8\x66\x81\xa3\x95\x42\x97\x21\x52\x30\x8f\xb9\xb7\xf1\x4d\x26\x53\xa3\x29\x84\x2b\x74\x26\x47\x7e\x1a\xfd\x18\x4d\x2a\xcb\xdd\xe9\xbb\x6c\xc0\x25\x56\x16\xc4\x9c\x4d\x6e\xbd\x83\x8b\x7f\x4a\xb4\x2b\x7e\x12\x4d\xa3\x69\x33\xa8\x2c\x5e\x38\xaf\xbf\x56\xf8\x6d\x16\x32\xd0\x42\xe1\x02\xac\x8b\x2e\x1c\x3f\x8d\x26\xd1\x0f\xdd\xb9\xe3\x1a\x83\xa5\x34\x8e\x4f\xa2\xe9\x8b\xe8\xa4\x1e\x1c\xd9\xc0\x02\x41\xf3\x69\xe4\x2d\x54\xef\x47\x56\xff\xc7\xc7\x5f\x3c\x4a\xd3\x68\xfa\x32\x3a\xad\x46\xc7\xd5\xff\x4e\x2a\xfc\x04\x97\x68\x6b\x2b\x27\xd1\x49\x67\xea\xee\xa6\xa2\x42\x19\x8a\xd4\x8a\xfb\xa7\x5a\x85\x0a\x08\x1d\x8d\x28\x8a\x79\x1d\xdb\xf5\x60\x61\xc4\xaa\x79\xaf\xc6\x42\x5e\xb2\x44\x81\x73\xb3\x20\x43\x6b\x98\x74\xa1\x92\xe7\x19\x05\xdb\x5d\x0c\xc9\x85\x5e\x4f\x4f\xa6\x2f\x97\x18\x4d\x20\x35\x5a\xaf\x34\x55\xa5\x14\x03\x0b\xaa\x45\x4f\xc3\x90\x9d\x65\x60\x89\xbd\xb6\x08\x2c\x0c\x47\xe4\x3a\xca\x17\x66\x39\xa2\x6d\x23\x29\xc5\x2c\xf0\xa9\xaa\xef\xcb\x0d\x41\x2e\xe4\xe5\x88\xb5\xe1\x4f\x03\xd3\xbd\xa9\x66\x38\x88\xf1\x06\x93\xe0\xc9\x08\x02\x67\x46\x93\x35\xca\xed\xa0\x10\x6b\xd8\xa8\x51\x78\x89\xea\x00\xfc\x95\x4c\xa8\x30\x1d\xf3\x7f\x57\x58\x12\xe6\xfb\xc0\x2a\xba\x6e\x58\xa3\x58\x06\x2e\x04\x21\x8c\x76\x7b\x96\x55\x4b\xa5\x2e\x4a\xaa\x8e\xa4\x7a\x0b\x53\xa9\x08\x6d\xc0\xaa\x1f\x98\x59\xf0\xae\x1a\xb2\xc5\x8a\xe5\x48\x56\x26\x4c\x43\x8e\xcf\x19\x24\x09\x16\xe4\x98\xc5\xf3\x52\x81\x65\xb8\x2c\x2c\x3a\x27\xbd\xc1\xbd\xf6\x9a\xbf\x66\xbb\x95\xc9\x80\xd1\xaa\xc0\x59\x40\xb8\xa4\x80\x15\x0a\x12\xcc\x8c\x12\x68\x37\xd6\x6b\xd3\x2e\x8a\xa2\x43\xde\xc0\x86\x86\x25\x91\xd1\x41\xe5\xd8\x82\x74\x98\x28\x04\xdb\x3a\xb7\x5f\x49\xa5\xc8\x15\xa0\x37\xbb\x4c\x8c\xf6\xa1\xe2\x72\x50\x43\x87\x3b\x8c\x6b\xbb\x3a\x05\x96\x42\x98\x28\xe3\xd0\x67\x00\x79\x0b\xe3\xdc\x5b\x3f\xe0\x29\x87\x7d\xc1\x53\xdc\x29\x74\xd8\xbd\x48\x57\x41\xe4\xf1\xad\x51\x45\x11\x26\xa6\xd4\x14\xcc\xff\x6a\x1c\x60\x26\xed\x48\x35\x87\xd8\x0a\x7d\xd9\xe7\xe5\xed\x43\x7c\x78\xeb\xb6\xc9\x94\x87\xb2\x9a\x27\x1e\xab\xa9\xb2\x1b\xd7\xf7\x47\xe6\x1b\xc2\xb1\x47\xe0\xaa\xa4\xa3\xb0\x19\x48\x17\x42\x42\xf2\x12\xb7\xbc\x56\x52\x63\x78\x28\x99\x6e\xb4\x1f\x9b\xd5\x5d\xeb\xdf\x87\xda\xec\x10\x48\x5b\x68\xc0\x22\x3c\x1c\x34\x5d\xeb\x8f\x0e\x9a\x05\xd8\x87\x43\xa6\x63\xfc\x71\xa4\xc3\xf1\x2c\xf1\x89\xc0\x12\x77\x64\x0a\x06\x5a\x30\x8b\xa9\x45\x97\xb1\x02\xad\x34\xe2\x51\x26\x8c\xed\x19\x17\x50\xfa\x5f\x9c\xef\x7f\xbe\x8d\xe1\xef\x48\xfa\x7e\x0d\x53\x9f\xcf\xa6\x86\xf9\x78\xe3\xd8\x9e\x33\xa9\x99\xc3\xc4\x68\x71\xff\x5a\x45\x97\xf9\xc2\x57\x49\xb9\xd4\xb3\x60\x1a\xb0\x4b\x50\x25\xce\x82\x17\x7b\x2b\xda\xfb\xb2\xf0\xbd\x74\x09\xf3\x89\xff\x11\xfd\x4a\xb5\x2c\xc3\x65\x61\x2c\x85\x85\x3e\x0f\x7a\x44\x7c\x00\xe6\x09\x73\xa5\x95\x01\x71\x44\xf2\x6d\xf6\x39\xff\xf0\xdb\xcf\xc7\x4a\xd1\x2d\x78\xa6\x40\x1d\x5a\xb8\xea\x43\xd7\x34\x4d\xb8\xc0\x45\x79\xce\x9b\xc2\x29\x60\x04\xf6\x1c\x69\x16\xfc\xbd\x50\xa0\xbf\x3e\x48\x15\x6b\xc4\x31\x23\x7b\xb3\xc7\xf9\x47\xb8\xfa\x8f\x54\xbd\x47\x89\x9a\xfa\x36\x22\x80\x60\x27\x6a\xce\xfc\x27\xf6\x06\x08\xee\xc2\xa4\x4a\x61\x4f\x97\x3f\x6c\x01\xfa\xbc\xbe\xe7\x9b\x92\x7c\xb5\x26\x5a\x0b\xaf\x95\x3a\x2a\x9a\x83\xd7\x6f\x0d\x97\xf3\x3a\x87\xbd\xd5\x62\xe8\x1e\xbd\x7b\xd9\x7e\x5f\xb3\x9d\xfd\x2a\x1d\xed\x5e\xb5\xdb\xf6\x41\x1b\x13\x87\x1a\x1d\xaa\xcc\x47\xcf\x65\x57\xf2\x50\xe3\xe2\x56\x2d\x8e\x81\x7d\x86\x04\x0b\x55\x05\xce\x28\x11\x47\x20\x3c\xf0\x69\xb4\xe7\xb1\x05\x7d\x07\xcf\x7e\x3b\x64\x33\xec\xf6\xb4\x72\xd8\xd3\xfb\xa2\x55\xb7\xf5\xcc\x9e\x55\xc5\x1c\xbb\xbe\xb9\xbb\x2b\x29\x28\x7b\xc5\xa6\x93\xc9\xff\x7e\xba\xf9\x25\x43\x7f\x3b\x7b\xc5\x5e\x4c\x26\xc5\xb2\xf3\x6d\xbd\x7d\x25\x1b\x35\xc8\x59\x73\x15\xf9\xa4\x85\x0a\x13\x42\xc1\x48\xf4\x0d\x55\xcd\xe1\xab\x46\xe7\xc2\x28\x31\xac\xf2\x59\xb7\x34\x18\xd9\xec\x29\xe6\x83\x8b\x63\xde\xf1\x39\xe6\x9d\x56\x5d\x05\xf3\x67\xcc\x8b\xaa\xd3\xb7\xe1\x6b\x8b\x65\x9f\x02\x21\x35\xa2\xdd\x9e\x07\x5f\x86\xdb\xfe\xef\x56\xa2\xdb\xf4\xf7\x6b\x5b\xf6\xd5\x03\x8f\x09\x59\x59\x60\xbf\x77\x17\xd3\xcd\xff\x18\x6c\xe7\xed\x08\xb5\x28\x9b\xd7\x24\x89\x39\x65\xe3\x32\x67\xa5\xb5\xa8\x89\xfd\xe9\x4b\x9d\x61\xd1\x98\xf7\x8d\x78\xb9\x9d\xed\xc4\x54\x23\xd8\x5f\x7e\x7d\xfd\x0c\x21\xc9\x98\xcf\x8b\xeb\xf5\x90\x07\x2d\x06\x5b\x72\xf8\x45\x32\x65\x2d\x3f\xd6\xeb\x0e\x59\xae\xaf\xb9\x4c\xd7\xeb\xb1\xf0\x27\xd1\xaa\xd3\x90\x63\x30\xbf\xbe\xf6\xcf\xf5\x3a\xe6\x34\x80\x5f\x6f\x49\x55\xf0\xf9\x35\xd5\xcb\xd8\xa2\x5d\x40\x6a\x3f\xb9\xf7\xb3\xe7\x62\xcc\x07\x60\x89\x29\x35\x86\x1e\xd1\x69\xde\xdc\x4e\xcc\x2b\x36\xb6\x81\xd1\xa6\x8a\x27\x31\xaf\xff\x83\xf5\x6f\x00\x00\x00\xff\xff\xdf\x71\xbc\xa3\xd9\x1a\x00\x00")

func staticIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_staticIndexHtml,
		"static/index.html",
	)
}

func staticIndexHtml() (*asset, error) {
	bytes, err := staticIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/index.html", size: 6873, mode: os.FileMode(420), modTime: time.Unix(1481183708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _staticMainJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\x6d\x6f\x1b\x37\xf2\x7f\x5d\x7d\x8a\x29\x1a\x64\x77\x1d\x69\xe5\x00\xff\xff\xe1\x20\x57\x01\x92\x34\x45\x0b\xb4\x68\x2f\x49\x5f\x19\x86\x4b\xed\x8e\x24\xc6\x2b\x72\x43\x72\x2d\xab\x89\xbe\xfb\x81\x8f\x4b\x4a\x2b\x3b\xe9\xb9\x01\x9a\xaa\xe4\x70\xe6\x37\x4f\x9c\x19\x6e\xa7\x67\x67\x23\x38\x83\x57\x44\x22\x54\x0d\x91\x12\x96\x5c\x00\x5f\x7c\xc0\x4a\x49\xd8\xae\x69\xb5\x06\x22\x10\xf0\x16\x99\x02\xc9\x3b\x51\xa1\x2c\x47\x70\x36\x1d\x59\xf2\xdf\x16\x12\xc5\x2d\x59\x34\x08\x9f\x46\x00\x9c\xe5\x86\x74\x0c\x6b\xc2\xea\x06\x45\x61\x96\x01\x16\x48\x58\xc9\x59\xae\xd6\x54\x8e\xe1\x80\x66\x04\xb0\x1f\x8d\x00\x96\x54\xa0\x3f\x5f\x96\x65\x4d\x14\x49\xce\x9b\xfd\x84\x83\xa7\x32\x1c\xf6\xa3\x91\xd3\xe7\x57\x54\x82\x56\xef\x50\x01\xb2\x8a\xb4\xb2\x6b\x88\x42\x09\x6a\x8d\x20\x51\x01\x5f\x82\xc4\x06\x2b\x85\x35\x6c\x0c\xa9\x04\xc5\x61\x81\xb0\x12\xa4\x5d\x63\xad\x79\x10\x56\x9b\x03\x15\x6f\x1c\xa9\x96\x64\xec\xa3\xd6\x44\x59\xd2\xd8\x14\x91\xd0\x3b\x85\xac\x3e\x32\xce\xf4\xec\x0c\x5a\x22\xb4\x25\xa9\x04\xe2\x0e\x48\xa0\x4c\x2a\xc2\x2a\x74\xf6\xd6\x0a\x46\xcc\x0c\xa9\xec\x16\x0e\xf8\xd9\x74\x04\x50\x71\x26\x95\xe8\x2a\xc5\x45\x6e\x39\x7a\x3b\xc9\xae\x45\x91\x17\xe6\xb7\x66\x54\x3a\x81\x73\x27\xb9\xdf\xf0\x8a\xcf\x81\xe1\x16\xde\xa1\x8a\x4f\x19\x55\xe7\xf0\xc9\xb8\x25\xe1\xa4\x9d\x98\x75\x6d\x4d\x14\x66\x63\xc8\x0b\x98\xbf\x70\xa2\x01\xa6\x53\x78\x4d\x5a\xd5\x09\x34\xb6\x6a\x39\x65\xca\x46\x14\x61\xbb\x23\x93\xbb\x43\x7a\x3b\x6f\x50\x01\x23\x1b\xd4\x1a\xc6\xe8\x8a\xc0\xdb\x81\x90\x8a\x0b\xbc\x36\x9c\x73\x7d\xa0\x70\xdb\x0e\xa8\xa3\x32\x81\xd2\xa3\xd4\x6b\x96\x70\x5f\x44\x0a\x0d\x69\x92\xa8\x2a\x90\xd5\xda\x9a\xb0\x87\x10\xa3\xa4\xae\x73\x0b\xce\x63\xa3\x4b\xc8\xbf\x35\xc7\xd6\x44\xfa\xbd\x1e\x78\xac\x4e\x19\x9d\x1e\x9d\xd0\x6a\x60\xdb\xaa\x43\xea\x3a\x1b\xc3\xc9\x6d\xa7\x89\xd3\xd3\xc3\x15\xb8\xe1\xb7\x38\x80\xf8\x0b\x01\xd7\xd8\xa0\xc2\x03\x50\x76\xb1\x8f\x94\x4b\xbb\x7d\x75\x0c\xca\x8a\xff\x7a\xd8\x8a\xaf\x56\xcd\xdf\x80\x9d\xaa\x6b\x79\x02\x36\x12\x53\xb2\x43\x37\x04\xb9\x55\x83\x44\x3b\xfc\xd3\x51\x9e\x94\x6e\x6b\x28\x47\x0e\x54\x32\x94\x59\x71\xb8\x1c\x69\xda\xcb\xba\xd6\x5c\x82\xc0\x90\x0b\x56\xe8\xe9\x6c\x38\x32\x3d\xcc\xe1\xf2\x2a\xe8\x72\xaf\xdc\xc8\x7a\x8e\x9f\x40\xd5\x09\x96\xaa\x1b\x51\xf9\x83\x03\x51\xea\x18\x68\xc8\x2e\xdb\xe7\x03\xd8\x3e\x7f\xf6\xe0\x2c\x51\xd9\x76\x72\x9d\x07\x5d\xe8\x06\xa5\x22\x9b\x76\x96\x24\x5f\x58\x1e\x3b\xba\x5b\xd2\x74\x98\xd2\x38\xb0\x49\xfc\xed\x0f\x5c\x14\x59\xc8\x4a\xf7\xea\xb4\x0d\x57\xcd\x2e\x75\x80\xb3\xc4\x6f\xa6\x00\x96\x37\xb8\x93\x79\x60\x54\x94\x1b\xd2\x9a\x4b\x27\xbe\xf3\xb4\xea\x82\x6c\x13\xbd\x35\x8d\x4f\x06\xc7\xb1\xbf\xc6\xee\x66\x9a\xde\xf0\x32\x78\x34\x33\xf3\xa3\xd7\xb8\x18\x07\xea\xdd\x49\x6a\x63\x8e\x88\x52\xed\x5a\x9c\x41\x26\x2b\xa2\x14\x8a\xac\xdf\xd0\x68\x66\xe6\xef\x70\x57\x06\x3b\x99\xa2\xb9\xec\x58\xa5\x28\x67\xd0\x0a\x5e\xa1\x94\xd7\xce\xac\xd7\x02\x65\xcb\x99\xc4\x5c\xc8\xd6\x5a\xa8\x8f\x4d\x09\x30\x87\x4d\xc7\x56\xe8\xc9\x35\x95\xd1\x3f\x84\x6b\x38\xb0\x91\x8a\x98\xd8\xf0\x07\xec\x42\x7c\xc2\xae\xf8\x23\xa2\x63\xda\x1a\xbd\x0c\xb7\xd0\x9f\x70\x0b\xfa\x80\xf3\x16\x91\x92\xae\x98\x8b\x4c\x39\x0e\x62\xc7\x10\xd1\x3a\x77\xf8\x12\x64\x5b\x06\xf8\xdd\x2a\x6e\xea\xfd\x26\x54\x65\xc5\x81\xc0\xb2\x21\x0a\x6e\x70\x37\x35\xf6\x76\xad\xd1\x58\x57\xe0\x5b\x14\x8a\xb2\x95\xee\x15\x42\x13\xa1\x1b\x03\xdd\x2f\xb5\x5c\x4a\xba\x68\x76\x40\x19\xd8\x4a\xdd\x09\xac\x75\x7e\x6f\x4a\x5d\xc2\x83\xc9\x53\x0b\x26\x79\x6e\xec\x80\xb2\x6b\x94\xbf\x65\x8e\x4a\x65\x1c\xa7\xfe\x6c\x9c\x93\x16\xf3\xdc\xe3\x8b\x02\xd3\xdc\xa5\xbb\x16\xf9\x32\xb7\x81\x04\xf3\x39\x64\xac\xdb\x2c\x50\x64\xfd\x3d\x63\xe5\xdb\x73\x30\xb7\xfc\xe2\x5b\x75\x98\x8d\x35\x52\xc4\x26\x00\xbf\xc1\xdd\x21\x6e\x7b\x2e\x2e\xf4\x4e\xe8\x9f\x4f\x3e\x69\xb9\xfb\xf2\xc9\xa7\x1b\xdc\xed\xff\x0c\x00\x2e\x6f\x70\x77\x95\xc6\xf2\xc8\xfe\xe3\xbc\x6b\x19\x0c\x39\x77\xc5\x75\x58\x70\xb1\x03\x1b\x91\xf7\x3a\x59\x7b\xb6\x15\xb8\xa4\x77\x94\xad\xf4\xf1\x0d\x6c\xa9\x5a\xc3\x8a\x87\x78\x1d\x76\xa6\x8b\xee\x10\xd4\x0f\xb9\x53\x53\x1d\xbb\xd3\x25\xcd\xe7\xcf\xf0\x69\x7f\xc2\xab\x96\xe4\x52\xff\xfd\x55\x6e\x0d\x31\x34\x87\x2c\xd6\x26\x83\x67\x06\xcc\x83\xde\xff\x0a\x7b\xfb\x54\xfe\xe7\x0c\x1e\xee\x06\x97\xe6\x7f\xc7\xdc\x1e\xe5\x69\x6b\x3b\x8a\xff\xd9\xd8\x8e\xcf\xa3\xd8\xba\x9f\x75\xe4\xc9\x49\x87\x34\x4d\xb8\x9f\xdc\x4c\x43\x05\x6c\xb8\xd4\xf6\xa9\xcc\x48\x70\x66\xc5\xc9\x31\x2c\x51\x55\x6b\x7d\x51\x09\xbe\x31\x4c\xa6\x35\x2e\xba\xd5\x74\x13\x84\xd4\xb6\xfa\x1c\xcd\x3d\xf2\xd4\xd4\x13\xcf\x2a\x27\xa7\x94\x7e\x18\x89\xdb\x29\x6d\x0c\xd9\x77\x36\x66\x2d\x14\x49\x3d\xb8\x74\x4d\x13\xcd\x27\x28\x28\xaf\x61\x0e\xff\x7f\x7e\x7e\x1e\x37\x41\x8d\x42\xd1\x53\x9b\xda\x6f\xf4\x7d\xb8\x0b\x8a\x1a\x0b\x73\xcc\xb6\x52\x87\xdd\x02\xb9\xa3\x5c\x96\x2b\x54\x79\x96\x9a\x2b\xf3\xfd\x6e\xa9\xd6\xc8\x74\xed\x8a\x3b\x07\x80\x1f\x74\x21\xe3\xad\x0e\x65\x59\xba\x76\xa4\x21\x3b\xde\xe9\x5e\x40\x35\x26\xea\x7c\xbd\xab\x36\x75\x43\x19\x96\x1f\x38\x65\x79\x06\x81\x75\x1f\x18\xb2\xf5\x77\x62\x2a\xf6\x54\x55\x4f\xa9\x82\x07\x5e\x1c\x8e\x5c\xbd\x6f\xd2\xc1\xed\xc0\x49\x43\xb5\x28\xa5\x4c\x5c\x87\x5b\xad\x3e\xe6\x3d\x0d\xf4\x4d\xbc\x1d\xbb\xd2\xd3\x27\x67\xba\xd0\xca\x98\x16\x95\x08\xd5\x87\x99\xe2\x6d\x1c\x65\x94\x29\x1d\x99\x0d\xcc\x61\x4b\x59\xcd\xb7\xa5\x44\xf5\xb3\x5b\xcc\xed\x04\x68\x08\xbd\x9f\xc7\x71\x64\xc5\x7d\x70\x9b\x1f\x0d\x25\x9e\x79\x9f\xf8\x4e\x86\xe9\xf3\x83\x94\x94\x36\x6e\xe7\x23\x74\x21\xb0\xc3\x60\x22\x51\x5d\x5b\x18\xb9\x43\x13\xcf\x28\x21\xf4\xed\x8f\x03\x60\x52\xdf\x90\x8c\xb2\x55\x7e\x38\x2e\x45\x06\x0a\x2b\xc6\x80\xa9\xf0\x98\x43\x1a\xfa\xaf\x38\x6f\x90\xb0\x63\xad\x3c\xe8\x1f\x4d\xf6\xe5\x36\x09\x13\xcc\x21\x2f\xed\x8f\xd1\xb0\xfb\xb5\xde\x9d\x68\xf2\xa2\x1f\x68\xdd\x4c\xde\xdf\xd0\x02\x5d\x40\xbd\xc5\xd5\x9b\xbb\x36\x8f\xd9\x7f\xfe\x0c\x59\x79\xe6\xb2\x25\xee\x5e\xe7\x51\xf4\x0e\x36\xf6\x03\xad\x7b\xdc\x4b\x8f\xa3\xd5\x78\x32\xb1\x37\x8b\x79\x9a\x88\x49\xfc\xe3\xc7\xcc\x26\xbd\xff\x4f\x33\x66\xc5\xef\x18\xbe\xa3\xd1\x41\xed\x74\x70\xd9\xa4\xb1\x09\x2c\xf1\x0e\x2b\xb7\x62\xc0\x17\xee\x45\xe3\x49\x9e\x7d\xe7\x74\x9b\x54\xbc\x63\x2a\x2b\x4a\x85\x77\x2a\x8f\xd4\x6c\x90\xad\xd4\xba\x08\xf4\x96\x3f\xd6\xe9\x01\x3f\x01\x7a\xea\x03\xf6\x13\xa5\xaf\xf6\xac\x28\xd7\x6a\xd3\xe4\x0a\x37\xad\x29\x39\xee\x9a\xb8\x36\xbb\xd7\x7e\x39\x0c\x79\xfa\x0e\x9b\x25\x17\xc8\xde\x23\xd7\x5e\xa1\xac\xed\x74\xa1\xd6\x62\xcc\xef\x89\xc5\xe6\x1c\xa7\x63\xd9\x2c\x6b\xf3\xe6\x05\x7c\x3b\x8f\x63\xa8\x0f\xea\x9e\x26\xde\x8e\x82\xd9\x94\x4d\x98\x3c\xca\x1f\xcd\xf6\xf7\x86\x2b\x3b\x04\xc0\x23\x71\xd5\x75\xb5\x6f\x70\xae\x75\x55\xc8\xfb\x87\x50\x17\x92\xbf\x9b\x5a\x51\x32\xdc\xea\x5f\x79\x56\xad\x89\x50\xd9\xd8\x58\x79\x7c\x4f\x59\x19\xdc\x2b\xd2\x19\xb0\xe1\xea\x5a\x57\x9a\x6b\xc3\x34\x4f\xe4\x5a\x38\x69\x04\x27\x63\xf4\x00\x2f\x22\x90\x24\xbc\x5c\x0b\x56\xdd\x60\xfd\x52\x20\xd1\x37\x80\x3b\x90\x2b\x41\x2a\x94\xc9\xd5\x6a\x56\xe0\xe9\x53\xb0\xbf\x7c\x54\xf6\xf7\x98\x59\xbe\x3c\xbf\xd2\xde\xd6\x77\x67\xa6\xf8\x5f\x28\xf8\x2e\x4b\x08\xca\x25\x17\x6f\x48\xb5\xce\x25\x0a\x8a\xb6\xcc\xd9\x9f\xe5\xae\x14\x78\x8b\x42\x62\x5e\x5c\x80\x5b\xbb\xeb\xd7\x74\x75\xf9\xc6\x74\x8f\xf9\x2d\x11\x40\xe7\xcf\x2f\x80\x7e\x9f\xa0\xb9\x00\xfa\xec\x59\xf2\x54\x69\x41\xd1\x18\x14\xc3\x3b\xb5\xcb\x34\xab\x9e\xd9\x87\xf9\xf9\x05\x7c\xf8\x3e\xff\x95\xa8\x75\xb9\xa1\xde\x00\x97\xf4\xea\x32\xdb\x65\x57\x8e\xfd\x38\xf0\x9b\x3c\x4f\x36\x8a\xe2\x02\x3e\x58\xc9\xdf\x7c\x13\x49\x35\x34\x97\x1f\xae\xe0\xd9\xfc\xe8\xe8\xe5\x87\xab\x0b\x0b\x62\xaf\xff\xb5\x7f\x44\x2b\x39\xa6\xbe\x8f\x32\x1c\x2f\xd2\xee\xd5\x06\x50\xe4\xfd\x7b\x83\x69\x20\x9a\x16\x44\x1c\x05\x93\x7b\x88\xbb\x87\x53\xd2\xfd\x5b\xd5\xf8\x12\xe2\xef\x0b\x4e\x23\xdd\xce\x6b\x77\x2d\x88\xc8\x86\x90\xdb\x8f\x0d\xfb\xd1\x48\x7b\xcf\x00\x5a\x32\x5d\x76\xd3\xa4\x39\x00\x9d\xe6\x90\x3b\x95\x17\x8f\x7e\x19\xfd\xf1\xf6\x17\xf8\x89\x30\xdd\x27\xfe\x63\x17\x52\xa8\xc7\xc1\xfa\x9d\x2b\xbe\x7f\xbc\xfd\xd9\x18\xba\x73\x8f\xb0\xff\xe9\x50\xec\xf2\xcc\x5e\xf9\xd9\xc0\x4e\x74\xc3\xeb\x4c\x4f\xdd\xe7\x8b\x90\xa4\x7f\x21\xbc\x80\x73\xef\xa7\xae\x24\x75\x9d\xb2\x1e\xc3\x4b\x21\xc8\xae\xd4\x33\xcb\x09\x2e\x76\xbc\x31\x11\x65\x9d\x1a\x04\x7a\x8a\xb4\x92\xc4\x52\x1c\x4c\x77\x75\x1e\xd0\x3b\x76\x6b\x2a\x15\x17\x3b\xf3\xae\xf9\x4e\x99\xba\xb7\x1f\x43\x96\x8d\xa1\x2b\x15\x7f\xa7\x84\x6d\xbe\xd2\x70\x26\x42\xe2\x81\x2d\x3f\xc6\xb6\x2c\x3f\x1a\x00\x4a\x74\xe8\x6d\xf4\xb1\x1c\x78\x11\xb7\x13\x68\xbf\xa5\x87\x50\x69\x44\x46\x43\x68\x6a\x17\x52\xd7\xfd\x81\xa1\x57\xf2\x81\x87\xe8\x43\xd9\xc3\x5c\xd3\x77\xfe\xf4\x75\xc6\x6a\x90\x5a\x3a\x31\x6a\xdf\x2f\x7e\x4c\x0c\xfc\xd8\x89\xf2\x0e\x55\xd7\xc2\x53\x78\x63\xbe\x6a\xfe\x64\xbf\x42\xca\x7f\x2a\x65\x28\xa3\xfe\x0a\x08\xdd\x92\x1e\x74\x8d\xfe\x83\x5d\xd3\xcc\x61\x5a\x10\x21\xcb\x8a\x6f\x5a\xda\x60\x7e\xd8\x81\x4d\x3c\xb5\x6f\xc5\x42\x70\xff\xe0\x3e\x4c\x18\x01\xae\xd6\xcf\x82\xd7\xec\xc5\x38\x8b\xbc\x28\xd7\x7c\xfb\x0b\x65\x37\x33\x58\x92\x46\x46\x9d\xed\x86\xd7\xf8\x8a\x88\x57\x9d\x52\x9c\xc9\xf7\xfc\xad\x49\xdf\x19\x5c\x66\x8a\xff\xbc\x21\x2b\x3d\x87\x65\x12\x59\xad\x25\xbe\xe7\xaf\x1b\xde\xd5\xd9\x55\x7f\xbe\xa6\xb2\x6d\xc8\xae\xe1\x2b\xee\x78\xfb\xb8\x18\x27\x60\x5c\x77\xd2\x63\x72\x71\x33\x8e\x4c\x24\x67\x26\x33\xdc\x63\x43\x1e\xeb\x1a\x22\xd0\x65\x4f\xf8\x76\x9a\xa4\x78\x71\x48\x9d\x7e\xff\xd3\x48\x1e\x20\x71\x77\x5f\xa0\x0a\x61\x1b\x66\xa6\x64\xd9\x0f\x91\x23\x88\x73\x5d\x07\xf3\x93\xbc\xe6\x55\xb7\x41\xa6\x8a\x52\x20\xa9\x77\x79\xff\x1d\xd5\x46\x8b\xee\x8c\xa7\x53\x78\x6f\x3e\x83\xf9\x24\xb4\xa8\x74\x48\x6d\xd7\xc8\xa0\x6a\x68\x75\x43\xd9\x0a\x38\xb3\x6f\x65\x94\xc5\x0f\xd8\x96\x83\x09\x95\x91\xee\xdf\x7b\x91\x5a\x29\x73\x58\xbb\x4f\x09\x07\x78\x22\xf8\x16\x54\x6d\x46\x85\x6c\x0c\x39\x46\x9f\x76\x53\xa3\xb8\x8f\x73\x58\x2a\x22\x56\xa8\xcc\xd4\xf0\x9a\x33\xa5\x99\x8f\xfc\x37\xd6\xe9\x54\xa7\x59\xf2\xa2\xde\x50\xa9\xfa\x69\xef\x10\x91\xe9\xdd\x35\xa2\x74\x00\x18\x42\x72\x7c\x5f\x60\x59\x75\x42\x20\x53\xef\x2d\x24\xfb\x1e\x37\x04\x46\xe0\x52\xa0\x5c\xf7\x93\xf2\x43\x38\x2c\xe1\x43\x38\xfc\x70\x3e\x08\x04\xce\xe0\xf9\xf9\xf9\x79\x82\xe7\x75\x83\xba\x01\xec\xa4\x85\x65\xfa\x06\xd7\xbf\x37\x48\x6e\xdd\x03\xe8\xb1\xeb\x29\x53\xa4\x52\xf7\x79\xf4\xbb\x85\x62\x13\xf3\xe8\x30\xd1\xfc\xee\xf7\x65\xfc\x11\xf2\x18\x5e\x8f\x8c\xb0\xfa\x08\xcb\x97\x81\xf8\x02\xf9\xa9\x68\x17\xf4\xa6\xab\x73\xff\xf3\xc5\x97\x08\x6b\x49\x27\x8f\x02\xd7\xcc\x96\x15\x67\x6e\xb4\x0c\x74\x40\xa3\xc9\x32\xf1\xe5\xf0\x6b\xc9\x41\xbe\x47\xaf\x26\x9a\xbb\xeb\x6b\x5e\x37\x44\xca\x3c\x5b\x12\x87\x25\x21\x21\x75\x1d\xed\x37\x64\x97\x0d\x16\xde\x13\x17\xcb\x69\x49\x3d\xa7\x41\x41\x11\x90\xfd\xb1\x7f\x7f\x3c\x95\x8c\x43\xc1\x34\x9c\x90\xc7\x13\xbb\x99\xbf\x33\x27\xf4\x44\xbe\xb2\xae\x69\x12\xa7\xbf\xb9\x6b\xb9\x0e\x33\xf3\x24\x4e\x2b\xa0\xba\xbc\x3c\x08\x0c\xcd\xa9\x49\xcb\x56\x87\xb0\x6c\xdf\x9d\xbc\x70\xae\x6a\x98\xbf\x48\x5e\x1b\xdd\x18\xed\x8a\x59\xbe\xaa\xc7\xc9\x63\x8f\x6b\x84\x36\x44\xcd\x32\x23\xe2\x60\x6f\x8d\x74\xb5\x56\x33\xf8\xd7\xf9\xf9\xe1\xd6\x96\xd6\x6a\x3d\x83\xe7\xff\xe7\x5e\xa2\xfd\x9f\x7d\x91\x62\x32\x03\x85\x29\x2a\xe9\xd3\x53\x34\xd6\xb8\x57\x44\xa2\xf8\x22\x50\x97\xb2\x6d\xa8\xca\xb3\x71\x56\x5c\x3e\xbf\x2a\x92\x63\x8b\x6e\x09\xae\x10\x9a\xbe\xf8\x55\xb7\x5c\xa2\x30\x47\x93\x07\x20\x4f\x7f\x4b\x71\xeb\xdb\x4e\xca\xd4\xbf\xcd\xa1\x7c\xd1\x2d\x7b\x32\xd3\x0d\xda\x5c\x82\x39\x9c\x5f\x00\x85\xef\x21\x62\x68\xe6\x5f\x28\x12\xe3\x69\xb6\x97\xf4\x0a\xe6\x96\x50\xdf\x22\xaf\x79\x8d\x2f\x55\x4e\x0b\x78\x0a\xe7\x77\xcb\xe5\xd1\x93\x97\x53\xa0\xe1\x0b\x07\xe8\x55\xc3\x17\xf9\xa5\x66\x75\x35\x86\x4f\xe6\x0b\x77\x66\x22\x63\xaa\xfd\xb1\xef\x11\xfa\xe7\x5c\x72\x8b\x2f\x65\xae\x39\x8c\x21\x5b\xf1\x89\x8f\x3c\x4d\x9e\xbe\x16\x87\xba\xb0\xa5\xaa\x5a\x83\xe2\xa0\xe7\x37\x7b\xdb\x3d\x18\x77\x9a\x74\xe2\x1f\x5d\x0e\xd3\xc1\xe8\xaa\x26\x0b\xd3\x35\x65\x45\x9a\xb2\x54\x4e\x48\xa5\xe8\xad\x4f\x4a\x7f\x2b\x45\x1c\x8b\x28\x85\x0f\xc9\x4f\x8f\x9c\x49\xd0\x0f\x68\x47\x04\x92\x2f\xd4\x4e\x93\x3e\xae\x76\x11\xc7\xaf\xd0\xae\x7f\x39\x7a\x50\xbb\x05\x11\x5f\xa8\xdc\x82\x88\xc7\xd5\xad\x67\xf8\x15\xaa\x85\x67\x8c\x13\x9a\xbd\xc5\x5a\x90\xad\xa9\xbf\x7a\x53\xb7\x78\x36\xc4\x41\xa0\x1e\x89\x8d\x9a\x76\x45\xc3\xd4\x4b\xb9\xed\x60\xf7\xc5\xe8\xbf\x01\x00\x00\xff\xff\xf3\x73\xa0\x1c\xd5\x29\x00\x00")

func staticMainJsBytes() ([]byte, error) {
	return bindataRead(
		_staticMainJs,
		"static/main.js",
	)
}

func staticMainJs() (*asset, error) {
	bytes, err := staticMainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "static/main.js", size: 10709, mode: os.FileMode(420), modTime: time.Unix(1481320489, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"static/index.html": staticIndexHtml,
	"static/main.js": staticMainJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"static": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{staticIndexHtml, map[string]*bintree{}},
		"main.js": &bintree{staticMainJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

